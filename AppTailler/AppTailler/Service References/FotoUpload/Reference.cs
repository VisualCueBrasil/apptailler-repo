//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppTailler.FotoUpload {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tailler.ddns.net/WebService/", ConfigurationName="FotoUpload.ArquivosSoap")]
    public interface ArquivosSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tailler.ddns.net/WebService/UploadArquivo", ReplyAction="*")]
        System.IAsyncResult BeginUploadArquivo(AppTailler.FotoUpload.UploadArquivoRequest request, System.AsyncCallback callback, object asyncState);
        
        AppTailler.FotoUpload.UploadArquivoResponse EndUploadArquivo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tailler.ddns.net/WebService/DownloadArquivo", ReplyAction="*")]
        System.IAsyncResult BeginDownloadArquivo(AppTailler.FotoUpload.DownloadArquivoRequest request, System.AsyncCallback callback, object asyncState);
        
        AppTailler.FotoUpload.DownloadArquivoResponse EndDownloadArquivo(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute()]
    public partial class UploadArquivoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadArquivo", Namespace="http://tailler.ddns.net/WebService/", Order=0)]
        public AppTailler.FotoUpload.UploadArquivoRequestBody Body;
        
        public UploadArquivoRequest() {
        }
        
        public UploadArquivoRequest(AppTailler.FotoUpload.UploadArquivoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tailler.ddns.net/WebService/")]
    public partial class UploadArquivoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nomeArquivo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public byte[] arquivoByte;
        
        public UploadArquivoRequestBody() {
        }
        
        public UploadArquivoRequestBody(string nomeArquivo, byte[] arquivoByte) {
            this.nomeArquivo = nomeArquivo;
            this.arquivoByte = arquivoByte;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute()]
    public partial class UploadArquivoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadArquivoResponse", Namespace="http://tailler.ddns.net/WebService/", Order=0)]
        public AppTailler.FotoUpload.UploadArquivoResponseBody Body;
        
        public UploadArquivoResponse() {
        }
        
        public UploadArquivoResponse(AppTailler.FotoUpload.UploadArquivoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tailler.ddns.net/WebService/")]
    public partial class UploadArquivoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UploadArquivoResult;
        
        public UploadArquivoResponseBody() {
        }
        
        public UploadArquivoResponseBody(string UploadArquivoResult) {
            this.UploadArquivoResult = UploadArquivoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute()]
    public partial class DownloadArquivoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DownloadArquivo", Namespace="http://tailler.ddns.net/WebService/", Order=0)]
        public AppTailler.FotoUpload.DownloadArquivoRequestBody Body;
        
        public DownloadArquivoRequest() {
        }
        
        public DownloadArquivoRequest(AppTailler.FotoUpload.DownloadArquivoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tailler.ddns.net/WebService/")]
    public partial class DownloadArquivoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nomeArquivo;
        
        public DownloadArquivoRequestBody() {
        }
        
        public DownloadArquivoRequestBody(string nomeArquivo) {
            this.nomeArquivo = nomeArquivo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute()]
    public partial class DownloadArquivoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DownloadArquivoResponse", Namespace="http://tailler.ddns.net/WebService/", Order=0)]
        public AppTailler.FotoUpload.DownloadArquivoResponseBody Body;
        
        public DownloadArquivoResponse() {
        }
        
        public DownloadArquivoResponse(AppTailler.FotoUpload.DownloadArquivoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tailler.ddns.net/WebService/")]
    public partial class DownloadArquivoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public byte[] DownloadArquivoResult;
        
        public DownloadArquivoResponseBody() {
        }
        
        public DownloadArquivoResponseBody(byte[] DownloadArquivoResult) {
            this.DownloadArquivoResult = DownloadArquivoResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ArquivosSoapChannel : AppTailler.FotoUpload.ArquivosSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadArquivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadArquivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadArquivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadArquivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ArquivosSoapClient : System.ServiceModel.ClientBase<AppTailler.FotoUpload.ArquivosSoap>, AppTailler.FotoUpload.ArquivosSoap {
        
        private BeginOperationDelegate onBeginUploadArquivoDelegate;
        
        private EndOperationDelegate onEndUploadArquivoDelegate;
        
        private System.Threading.SendOrPostCallback onUploadArquivoCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadArquivoDelegate;
        
        private EndOperationDelegate onEndDownloadArquivoDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadArquivoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ArquivosSoapClient() : 
                base(ArquivosSoapClient.GetDefaultBinding(), ArquivosSoapClient.GetDefaultEndpointAddress()) {
        }
        
        public ArquivosSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ArquivosSoapClient.GetBindingForEndpoint(endpointConfiguration), ArquivosSoapClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ArquivosSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ArquivosSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ArquivosSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ArquivosSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ArquivosSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<UploadArquivoCompletedEventArgs> UploadArquivoCompleted;
        
        public event System.EventHandler<DownloadArquivoCompletedEventArgs> DownloadArquivoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AppTailler.FotoUpload.ArquivosSoap.BeginUploadArquivo(AppTailler.FotoUpload.UploadArquivoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadArquivo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadArquivo(string nomeArquivo, byte[] arquivoByte, System.AsyncCallback callback, object asyncState) {
            AppTailler.FotoUpload.UploadArquivoRequest inValue = new AppTailler.FotoUpload.UploadArquivoRequest();
            inValue.Body = new AppTailler.FotoUpload.UploadArquivoRequestBody();
            inValue.Body.nomeArquivo = nomeArquivo;
            inValue.Body.arquivoByte = arquivoByte;
            return ((AppTailler.FotoUpload.ArquivosSoap)(this)).BeginUploadArquivo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AppTailler.FotoUpload.UploadArquivoResponse AppTailler.FotoUpload.ArquivosSoap.EndUploadArquivo(System.IAsyncResult result) {
            return base.Channel.EndUploadArquivo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUploadArquivo(System.IAsyncResult result) {
            AppTailler.FotoUpload.UploadArquivoResponse retVal = ((AppTailler.FotoUpload.ArquivosSoap)(this)).EndUploadArquivo(result);
            return retVal.Body.UploadArquivoResult;
        }
        
        private System.IAsyncResult OnBeginUploadArquivo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nomeArquivo = ((string)(inValues[0]));
            byte[] arquivoByte = ((byte[])(inValues[1]));
            return this.BeginUploadArquivo(nomeArquivo, arquivoByte, callback, asyncState);
        }
        
        private object[] OnEndUploadArquivo(System.IAsyncResult result) {
            string retVal = this.EndUploadArquivo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadArquivoCompleted(object state) {
            if ((this.UploadArquivoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadArquivoCompleted(this, new UploadArquivoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadArquivoAsync(string nomeArquivo, byte[] arquivoByte) {
            this.UploadArquivoAsync(nomeArquivo, arquivoByte, null);
        }
        
        public void UploadArquivoAsync(string nomeArquivo, byte[] arquivoByte, object userState) {
            if ((this.onBeginUploadArquivoDelegate == null)) {
                this.onBeginUploadArquivoDelegate = new BeginOperationDelegate(this.OnBeginUploadArquivo);
            }
            if ((this.onEndUploadArquivoDelegate == null)) {
                this.onEndUploadArquivoDelegate = new EndOperationDelegate(this.OnEndUploadArquivo);
            }
            if ((this.onUploadArquivoCompletedDelegate == null)) {
                this.onUploadArquivoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadArquivoCompleted);
            }
            base.InvokeAsync(this.onBeginUploadArquivoDelegate, new object[] {
                        nomeArquivo,
                        arquivoByte}, this.onEndUploadArquivoDelegate, this.onUploadArquivoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AppTailler.FotoUpload.ArquivosSoap.BeginDownloadArquivo(AppTailler.FotoUpload.DownloadArquivoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadArquivo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDownloadArquivo(string nomeArquivo, System.AsyncCallback callback, object asyncState) {
            AppTailler.FotoUpload.DownloadArquivoRequest inValue = new AppTailler.FotoUpload.DownloadArquivoRequest();
            inValue.Body = new AppTailler.FotoUpload.DownloadArquivoRequestBody();
            inValue.Body.nomeArquivo = nomeArquivo;
            return ((AppTailler.FotoUpload.ArquivosSoap)(this)).BeginDownloadArquivo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AppTailler.FotoUpload.DownloadArquivoResponse AppTailler.FotoUpload.ArquivosSoap.EndDownloadArquivo(System.IAsyncResult result) {
            return base.Channel.EndDownloadArquivo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private byte[] EndDownloadArquivo(System.IAsyncResult result) {
            AppTailler.FotoUpload.DownloadArquivoResponse retVal = ((AppTailler.FotoUpload.ArquivosSoap)(this)).EndDownloadArquivo(result);
            return retVal.Body.DownloadArquivoResult;
        }
        
        private System.IAsyncResult OnBeginDownloadArquivo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nomeArquivo = ((string)(inValues[0]));
            return this.BeginDownloadArquivo(nomeArquivo, callback, asyncState);
        }
        
        private object[] OnEndDownloadArquivo(System.IAsyncResult result) {
            byte[] retVal = this.EndDownloadArquivo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadArquivoCompleted(object state) {
            if ((this.DownloadArquivoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadArquivoCompleted(this, new DownloadArquivoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadArquivoAsync(string nomeArquivo) {
            this.DownloadArquivoAsync(nomeArquivo, null);
        }
        
        public void DownloadArquivoAsync(string nomeArquivo, object userState) {
            if ((this.onBeginDownloadArquivoDelegate == null)) {
                this.onBeginDownloadArquivoDelegate = new BeginOperationDelegate(this.OnBeginDownloadArquivo);
            }
            if ((this.onEndDownloadArquivoDelegate == null)) {
                this.onEndDownloadArquivoDelegate = new EndOperationDelegate(this.OnEndDownloadArquivo);
            }
            if ((this.onDownloadArquivoCompletedDelegate == null)) {
                this.onDownloadArquivoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadArquivoCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadArquivoDelegate, new object[] {
                        nomeArquivo}, this.onEndDownloadArquivoDelegate, this.onDownloadArquivoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AppTailler.FotoUpload.ArquivosSoap CreateChannel() {
            return new ArquivosSoapClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.ArquivosSoap)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.ArquivosSoap)) {
                return new System.ServiceModel.EndpointAddress("http://tailler.ddns.net/WebService/Arquivos.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ArquivosSoapClient.GetBindingForEndpoint(EndpointConfiguration.ArquivosSoap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ArquivosSoapClient.GetEndpointAddress(EndpointConfiguration.ArquivosSoap);
        }
        
        private class ArquivosSoapClientChannel : ChannelBase<AppTailler.FotoUpload.ArquivosSoap>, AppTailler.FotoUpload.ArquivosSoap {
            
            public ArquivosSoapClientChannel(System.ServiceModel.ClientBase<AppTailler.FotoUpload.ArquivosSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUploadArquivo(AppTailler.FotoUpload.UploadArquivoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UploadArquivo", _args, callback, asyncState);
                return _result;
            }
            
            public AppTailler.FotoUpload.UploadArquivoResponse EndUploadArquivo(System.IAsyncResult result) {
                object[] _args = new object[0];
                AppTailler.FotoUpload.UploadArquivoResponse _result = ((AppTailler.FotoUpload.UploadArquivoResponse)(base.EndInvoke("UploadArquivo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDownloadArquivo(AppTailler.FotoUpload.DownloadArquivoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DownloadArquivo", _args, callback, asyncState);
                return _result;
            }
            
            public AppTailler.FotoUpload.DownloadArquivoResponse EndDownloadArquivo(System.IAsyncResult result) {
                object[] _args = new object[0];
                AppTailler.FotoUpload.DownloadArquivoResponse _result = ((AppTailler.FotoUpload.DownloadArquivoResponse)(base.EndInvoke("DownloadArquivo", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            ArquivosSoap,
        }
    }
}
